/*!
* parlx.js v1.2.0
* Copyright Â© 2017-present Jakub Biesiada. All rights reserved.
* MIT License
*/
class Parlx{constructor(t,e={}){t.length>0?this.init(t,e):0!==t.length&&(this.element=t,this.settings=this.settings(e),this.parallaxEffect(),this.addEventListeners())}init(t,e){for(let s=0;s<t.length;s++)this.parlx=new Parlx(t[s],e)}addEventListeners(){window.addEventListener("scroll",()=>this.onWindowScroll()),window.addEventListener("resize",()=>this.onWindowResize())}onWindowScroll(){this.parallaxEffect()}onWindowResize(){this.parallaxEffect()}transforms(){"horizontal"===this.settings.direction?(this.moveX=this.movement,this.moveY="0"):"vertical"===this.settings.direction?(this.moveX="0",this.moveY=this.movement):"diagonal"===this.settings.direction&&(this.moveX=this.movement,this.moveY=this.movement),this.transform=`translate(${this.moveX}px, ${this.moveY}px)`}parallaxEffect(){this.element.style.height=this.settings.height;const t=this.element.getBoundingClientRect().y;Math.abs(this.settings.speed)>1&&(this.settings.speed=.3),this.movement=this.settings.speed*t/2,"ontouchstart"in document.documentElement&&!this.settings.mobile&&(this.settings.speed=0),this.transforms(),"foreground"===this.settings.type?Object.assign(this.element.style,{"-webkit-transform":this.transform,transform:this.transform}):"background"===this.settings.type&&Object.assign(this.element.querySelector(".parlx-children, img").style,{"-webkit-transform":this.transform,transform:this.transform,"object-fit":"cover","min-width":`${this.element.offsetWidth*(1+2*Math.abs(this.settings.speed))}px`,height:`${this.element.offsetHeight*(1+2*Math.abs(this.settings.speed))}px`});const e={move:this.movement};this.element.dispatchEvent(new CustomEvent("parlxMove",{detail:e}))}settings(t){const e={direction:"vertical",type:"background",speed:.3,height:"400px",mobile:!0},s={};for(let i in e)if(i in t)s[i]=t[i];else if(this.element.getAttribute(`data-${i}`)){const t=this.element.getAttribute(`data-${i}`);try{s[i]=JSON.parse(t)}catch(e){s[i]=t}}else s[i]=e[i];return s}}let scope;if("undefined"!=typeof document&&new Parlx(document.querySelectorAll("[data-parlx]")),"undefined"!=typeof window?scope=window:"undefined"!=typeof global&&(scope=global),scope&&scope.jQuery){scope.jQuery.fn.parlx=function(t){new Parlx(this,t)}}"function"==typeof define&&define.amd?define("Parlx",[],function(){return Parlx}):"undefined"==typeof exports||exports.nodeType||("undefined"!=typeof module&&!module.nodeType&&module.exports&&(exports=module.exports=Parlx),exports.default=Parlx);